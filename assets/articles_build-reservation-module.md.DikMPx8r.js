import{_ as i,c as s,o as e,a4 as a,a5 as t}from"./chunks/framework.BGFi9fUZ.js";const u=JSON.parse('{"title":"Build a reservation module","description":["We show you the way to build a reservation module step by step"],"frontmatter":{"article":true,"date":"2023-03-02T00:00:00.000Z","image":["blog/banner/tutorial_reservation_module.png"],"description":["We show you the way to build a reservation module step by step"],"author":"Sunny May"},"headers":[],"relativePath":"articles/build-reservation-module.md","filePath":"articles/build-reservation-module.md","lastUpdated":1703166228000}'),l={name:"articles/build-reservation-module.md"},n=a('<h1 id="build-a-reservation-module" tabindex="-1">Build a reservation module <a class="header-anchor" href="#build-a-reservation-module" aria-label="Permalink to &quot;Build a reservation module&quot;">​</a></h1><p>In the previous guide on <a href="./../reference/guide/build-module.html">build an hours module</a>, we showed you how to declare a service and build a conversational user interface (CUI) in the same module. In this guide, we&#39;ll demonstrate how to build CUI on top of a predefined <a href="./reservation/reservation-api.html">generic reservation service</a>.</p><p>The table reservation module assists users in booking, viewing, or canceling reservations in a restaurant setting. This guide will only implement &quot;<a href="./reservation-cui-design.html#make-a-reservation">making a reservation</a>&quot; as an example. Exposing viewing and canceling reservations should be similar, and you can check the <a href="https://build.opencui.io/org/me.restaurant/agent/tableReservation/struct/type" target="_blank" rel="noreferrer">table reservation module</a> to see how it is done.</p><h2 id="before-you-start" tabindex="-1">Before you start <a class="header-anchor" href="#before-you-start" aria-label="Permalink to &quot;Before you start&quot;">​</a></h2><ol><li>Log in to <a href="https://build.opencui.io/login" target="_blank" rel="noreferrer">OpenCUI</a>.</li><li>It is highly recommended that you follow through the <a href="./../reference/guide/index.html">Quickstart guide</a>.</li><li>It is useful to go over <a href="./reservation-cui-design.html">reservation cui design</a></li><li>It is useful to go over <a href="./reuse-reservation-module.html">adding table reservation functionality</a></li></ol><h2 id="create-module-tablereservation" tabindex="-1">Create module: tableReservation <a class="header-anchor" href="#create-module-tablereservation" aria-label="Permalink to &quot;Create module: tableReservation&quot;">​</a></h2><p>To create a module, fill out the project creation form with the following settings:</p><ul><li><strong>Project label</strong>: Enter <code>tableReservation</code>.</li><li><strong>Template</strong>: Select <strong>LibraryWithCore</strong>. This template has already imported the necessary types from the <code>io.opencui.core</code> library.</li><li><strong>Languages</strong>: Add <strong>English(en)</strong>. You are required to add at least one language.</li><li><strong>Enable service interface</strong>: Turn this toggle off. You won&#39;t need to declare a new service for this module as you&#39;ll be reusing an existing one.</li></ul><h2 id="import-the-service" tabindex="-1">Import the service <a class="header-anchor" href="#import-the-service" aria-label="Permalink to &quot;Import the service&quot;">​</a></h2><p>To use functions declared in the reservation APIs, you need to import that service first.</p><ol><li>Enter the <a href="https://build.opencui.io/org/services.opencui/agent/reservation/struct/service_schema" target="_blank" rel="noreferrer">reservation module</a> where the service is declared and import it into the <code>tableReservation</code> module you just created.</li></ol><h2 id="prepare-types-for-the-service" tabindex="-1">Prepare types for the service <a class="header-anchor" href="#prepare-types-for-the-service" aria-label="Permalink to &quot;Prepare types for the service&quot;">​</a></h2><p>It is common practice for APIs to be designed to be as generic as possible so that the same backend can be used for different domains. Typically, these APIs are defined using abstract types that can be customized into different concrete types for different domains.</p><p>The reservation API follows this principle by introducing an abstract type called &#39;Resource&#39; as the return type for a function that returns a list of candidate resources. This type represents things that can be booked ahead of time, such as a hairdresser or table.</p><p>Each resource has some read-only properties, such as the capacity of a particular table. These available resources and their properties should be set up in the backend by the operations team. During the booking process, the chatbot needs to find out the user&#39;s requirements on resources, such as party size, so that it can pair the users with the resource with properties that match their needs.</p><h3 id="build-frame-table" tabindex="-1">Build frame: Table <a class="header-anchor" href="#build-frame-table" aria-label="Permalink to &quot;Build frame: Table&quot;">​</a></h3><p>For a typical restaurant business, the bookable resource is <code>Table</code>. In addition to the existing properties defined in the <a href="./reservation/reservation-api.html#resource">Resource</a>, each table should also have a property representing capacity – the number of guests it can hold. Restaurant defines the number of tables they have as well as how many people can each table fit in the backend.</p><h4 id="schema-layer-declare-a-frame" tabindex="-1">Schema layer: declare a frame <a class="header-anchor" href="#schema-layer-declare-a-frame" aria-label="Permalink to &quot;Schema layer: declare a frame&quot;">​</a></h4><p>At this layer, you will create a &quot;Table&quot; frame, implements <strong>Resource</strong> frame.</p><h5 id="create-the-frame" tabindex="-1">Create the frame <a class="header-anchor" href="#create-the-frame" aria-label="Permalink to &quot;Create the frame&quot;">​</a></h5><p>Inside the <code>tableReservation</code> module</p><ol><li><p>Create a frame labeled <code>Table</code>.</p></li><li><p>Inside the <code>Table</code> frame, inherit <code>services.opencui.reservation.Resource</code>.</p><p><img src="'+t+'" alt="inherit"></p></li></ol><h5 id="add-slots" tabindex="-1">Add slots <a class="header-anchor" href="#add-slots" aria-label="Permalink to &quot;Add slots&quot;">​</a></h5><p>Next, add a slot of <strong>kotlin.Int</strong> type with the label <code>capacity</code>, representing the maximum number of guests that the table can seat.</p><h4 id="annotate-type-table" tabindex="-1">Annotate type: Table <a class="header-anchor" href="#annotate-type-table" aria-label="Permalink to &quot;Annotate type: Table&quot;">​</a></h4><p>Since this type doesn&#39;t need to be instantiated conversationally, there&#39;s no need to add dialog annotation.</p><h2 id="build-cui-for-the-service" tabindex="-1">Build CUI for the service <a class="header-anchor" href="#build-cui-for-the-service" aria-label="Permalink to &quot;Build CUI for the service&quot;">​</a></h2><p>In OpenCUI, conversational user interfaces are simply a set of dialog annotated types, including skills and their dependent types. Since all the dependent types are already available in the OpenCUI system, you can build the &#39;make reservation&#39; skill directly.</p><h3 id="build-skill-makereservation" tabindex="-1">Build skill: MakeReservation <a class="header-anchor" href="#build-skill-makereservation" aria-label="Permalink to &quot;Build skill: MakeReservation&quot;">​</a></h3><p>To implement the <a href="./reservation-cui-design.html#make-a-reservation">make a reservation</a> use case, you will use location, resourceType and <a href="./reservation/reservation-api.html#listresource">listResource</a> function to get a list of resources for user to pick, then <a href="./reservation/reservation-api.html#makereservation">makeReservation</a> function to make the reservation. So the skill should contain the following slots:</p><ul><li><code>userIdentifier</code>: A unique identifier for the user making the reservation.</li><li><code>location</code>: The specified place that owns resources. Here, it should be the location of your restaurant.</li><li><code>resourceType</code>: The type of the resource since . Here, it should be &quot;table&quot;.</li><li><code>duration</code>: The resource duration of the reservation.</li><li><code>number</code>: The number of guests attending the reservation.</li><li><code>date</code>: The date of the reservation.</li><li><code>time</code>: The time of the reservation.</li></ul><p>For this module, you will be handling a simpler case, with the following assumptions:</p><ol><li>The restaurant exists in only one location.</li><li>The only resource can be booked for this restaurant is <code>table</code>.</li><li>The duration is fixed for all the tables by restaurant.</li><li>The number of guests determines which table the user can book (its capacity need to be greater than or equals to the party size).</li></ol><p>Note that not all slots are designed for user input; some slots may be implied or supplied by the backend, but they are included as slots to make it easier to use the generic reservation APIs. Based the above assumptions, location, resource type, and duration will be provided by business so no need for user to input.</p><h4 id="schema-layer-declare-a-skill" tabindex="-1">Schema layer: declare a skill <a class="header-anchor" href="#schema-layer-declare-a-skill" aria-label="Permalink to &quot;Schema layer: declare a skill&quot;">​</a></h4><h5 id="create-the-skill" tabindex="-1">Create the skill <a class="header-anchor" href="#create-the-skill" aria-label="Permalink to &quot;Create the skill&quot;">​</a></h5><p>Inside the <code>tableReservation</code> module and <strong>Types</strong> page, under the <strong>Structure</strong> view.</p><ol><li>Create a skill labeled as <code>MakeReservation</code>.</li></ol><h5 id="add-slots-1" tabindex="-1">Add slots <a class="header-anchor" href="#add-slots-1" aria-label="Permalink to &quot;Add slots&quot;">​</a></h5><p>To prompt a user for a specific day, use the <a href="./../reference/plugins/components/datepicker/">DatePicker</a> frame. Ensure that the <code>components</code> module exists under the <strong>Dependencies</strong> tab before proceeding. If it does not, import the <a href="https://build.opencui.io/org/io.opencui/agent/components/struct/frame/63c8aea6517f06c1880e3cff" target="_blank" rel="noreferrer">components module</a> to the <code>tableReservation</code> module first.</p><p>Inside the <code>MakeReservation</code> skill and <strong>Schema</strong> tab, under the <strong>Structure</strong> view.</p><ol><li>In the <strong>Slots</strong> section, add the following slots: <ul><li><code>userIdentifier</code> of type <strong>Frame / io.opencui.core.user.UserIdentifier</strong>.</li><li><code>location</code> of type <strong>Entity / services.opencui.reservation.Location</strong>.</li><li><code>resourceType</code> of type <strong>Entity / services.opencui.reservation.ResourceType</strong>.</li><li><code>duration</code> of type <strong>Entity / kotlin.Int</strong>.</li><li><code>number</code> of type <strong>Entity / kotlin.Int</strong>.</li><li><code>datePicker</code> of type <strong>Frame / io.opencui.components.dataEntry.DatePicker</strong>.</li><li><code>timePicker</code> of type <strong>Frame / io.opencui.components.dataEntry.TimePicker</strong>.</li></ul></li><li>In the <strong>Services</strong> section, select <strong>services.opencui.reservation.IReservation</strong> with the label <code>reservation</code> to access functions, then click <strong>Save</strong>.</li></ol><h5 id="define-functions" tabindex="-1">Define functions <a class="header-anchor" href="#define-functions" aria-label="Permalink to &quot;Define functions&quot;">​</a></h5><p>To make it easy to use reservation APIs under table reservation use case, you can add some native helper functions. These functions bind the slots value to service function&#39;s input parameters, provide a simpler interface for the skill.</p><p>To support the contextual snippets in <a href="./reservation-cui-design.html#make-a-reservation">Make a reservation</a> service, add these functions:</p><ol><li><code>filterTables(resourceList:List&lt;Resource&gt;):List&lt;Resource&gt;</code><ul><li>Filter the table resources based on the number of people based on the assumption mentioned above.</li></ul></li><li><code>isTableAvailable(date:LocalDate?, time: LocalTime?):Boolean</code><ul><li>Check if there is an available table based on the number of people and the input parameters. If an input parameter for date or time is null, the function will not use it as a filter when checking table availability.</li></ul></li><li><code>makeReservation():Boolean</code><ul><li>Select a table resource meets the user&#39;s requirement and call the <strong>reservation.makeReservation</strong> passing that resource along with other required information to make a reservation.</li></ul></li></ol><p>To define functions:</p><p>Inside the <code>MakeReservation</code> skill and <strong>Schema</strong> tab, under the <strong>Structure</strong> view. In the <strong>Functions</strong> section, add these functions</p><ol><li><p><strong>filterTables</strong></p><ul><li>Function label: <code>filterTables</code></li><li>Input parameter <ul><li>Type <strong>Frame / services.opencui.reservation.Resource</strong> with label <code>resourceList</code>, multi-valued, not null</li></ul></li><li>Return type: <strong>Frame / services.opencui.reservation.Resource</strong>, multi-valued, not null</li><li>Implementation:<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// If the resourceList is empty, just return an empty list</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(resourceList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> emptyList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get a list of unique capacities in ascending order</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> capacityList </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (reservation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listResource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, resourceType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{it </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> it.capacity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">distinct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Find the minimum capacity which is not smaller than the number of people</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> capacity:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ?</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> capacityList){</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      capacity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      break</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Return an empty list if there is no suitable capacity</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(capacity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> emptyList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Filter the tables by the capacity</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> filteredResource </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (resourceList </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   it.capacity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> capacity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> filteredResource</span></span></code></pre></div></li></ul></li><li><p><strong>isTableAvailable</strong></p><ul><li>Function label: <code>isTableAvailable</code></li><li>Input parameter <ul><li>Type <strong>Entity / java.time.LocalDate</strong> with label <code>date</code>, nullable</li><li>Type <strong>Entity / java.time.LocalTime</strong> with label <code>time</code>, nullable</li></ul></li><li>Return Type: <strong>kotlin.Boolean</strong>, not null</li><li>Implementation:<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){ </span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   filterTables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reservation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listResource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, resourceType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNotEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){ </span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   filterTables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reservation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listResource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, resourceType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNotEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ </span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   filterTables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reservation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listResource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, resourceType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date, time, duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNotEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div></li></ul></li><li><p><strong>makeReservation</strong></p><ul><li>Function label: <code>makeReservation</code></li><li>Input parameter: N/A</li><li>Return Type: <strong>kotlin.Boolean</strong>, not null</li><li>Implementation:<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get available tables resource</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> availableResources </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> filterTables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reservation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listResource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, resourceType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, datePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, timePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Make a reservation if there is an available table</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (availableResources.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNotEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()){</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   reservation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">makeReservation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userIdentifier</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.userId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, datePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, timePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, availableResources.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   false</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul></li></ol><h4 id="annotate-type-makereservation" tabindex="-1">Annotate type: MakeReservation <a class="header-anchor" href="#annotate-type-makereservation" aria-label="Permalink to &quot;Annotate type: MakeReservation&quot;">​</a></h4><p>During the slot filling process, the following dialog annotations will be used.</p><ol><li><p><a href="./../reference/annotations/fillstrategy.html">Fill strategy</a>: The fill strategy for each slot depends on who fills it. The slots filled by the business should have a direct fill strategy, while the slots filled by the user should follow the default always ask strategy. Here are the fill strategies for each slot:</p><ul><li>Direct fill: <code>location</code> slot, <code>resourceType</code> slot and <code>duration</code> slot.</li><li>Always ask: <code>number</code> slot, <code>datePicker</code> slot and <code>timePicker</code> slot.</li></ul></li><li><p><a href="./../reference/annotations/init.html">Initialization</a>: When the business fills a slot, you can use initialization to provide a value for that slot. Here are the initial values for each slot:</p><ul><li><code>location</code>: The first value in the list returned by <a href="./reservation/reservation-api.html#listlocation">listLocation</a>.</li><li><code>resourceType</code>: &quot;table&quot; with the right type.</li><li><code>duration</code>: The first duration of the first value in the list returned by <a href="./reservation/reservation-api.html#listresource">listResource</a>.</li></ul></li><li><p><a href="./../reference/annotations/valuecheck.html">Value check</a>: When the user provides a slot value, you can use value check to validate it. For this guide, following the default recovery strategy is sufficient. Here are the rules for each slot to be considered valid:</p><ul><li><code>number</code>: There is at least one table that can seat the requested number of guests.</li><li><code>datePicker</code>: There is at least one table available within the business&#39;s restrictions and the values (number and date) provided by the user.</li><li><code>timePicker</code>: There is at least one table available within the business&#39;s restrictions and the values (number, date, and time) provided by the user.</li></ul></li><li><p><a href="./../reference/annotations/confirmation.html">Confirmation</a>: Once the user has provided all required values, you can ask them to confirm their choices.</p></li></ol><p>Now, add the following dialog annotations to the <strong>MakeReservation</strong> skill:</p><h5 id="add-slot-level-annotations" tabindex="-1">Add slot level annotations <a class="header-anchor" href="#add-slot-level-annotations" aria-label="Permalink to &quot;Add slot level annotations&quot;">​</a></h5><ol><li><p><strong><code>location</code> slot:</strong></p><ul><li>Fill strategy: Direct fill</li><li>Initialization with the following Association:<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">reservation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li></ul></li><li><p><strong><code>resourceType</code> slot:</strong></p><ul><li>Fill strategy: Direct fill</li><li>Initialization with the following Association:<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">services.opencui.reservation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ResourceType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;table&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ul></li><li><p><strong><code>duration</code> slot:</strong></p><ul><li>Fill strategy: Direct fill</li><li>Initialization with the following Association:<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">reservation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listResource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, resourceType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.durations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li></ul></li><li><p><strong><code>number</code> slot:</strong></p><ul><li>Fill strategy: Always ask</li><li>Value check with the following Condition:<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filterTables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reservation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listResource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, resourceType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNotEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li><li>Names: number of people</li><li>Prompt: How many people will you need the reservation for?</li><li>Value check template :<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> There </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> no available table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> `${number}` people, please choose another number.</span></span></code></pre></div></li></ul></li><li><p><strong><code>datePicker</code> slot:</strong></p><ul><li>Fill strategy: Always Ask</li><li>Value check with the following Condition:<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filterTables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reservation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listResource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, resourceType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, datePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNotEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li><li>Names: date</li><li>Prompt: Which day will you be joining us on?</li><li>Value check template :<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">There </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> no available table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> `${number}` on `${datePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()}`, please choose another date.</span></span></code></pre></div></li></ul></li><li><p><strong><code>timePicker</code> slot:</strong></p><ul><li>Fill strategy: Always Ask</li><li>Value check with the following Condition:<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filterTables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reservation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listResource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, resourceType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, datePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, timePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNotEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li><li>Names: time</li><li>Prompt: What time would you like the reservation for?</li><li>Value check template :<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">There </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> no available table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> `${number}` at `${timePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()}` on `${datePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()}`, please choose another time.</span></span></code></pre></div></li></ul></li></ol><h5 id="add-type-level-annotations" tabindex="-1">Add type level annotations <a class="header-anchor" href="#add-type-level-annotations" aria-label="Permalink to &quot;Add type level annotations&quot;">​</a></h5><ul><li>Confirmation with the following Condition:<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span></span></code></pre></div></li><li>Confirmation template :<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Are you sure to book a table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> `${number}` at `${timePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()}` on `${datePicker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()}`?</span></span></code></pre></div></li><li>Expressions <ul><li>I want to book a table</li><li>I want to book a table <code>$datePicker$</code></li><li>I want to book a table at <code>$timePicker$</code></li><li>I want to book a table for <code>$number$</code></li></ul></li></ul><div class="warning custom-block"><p class="custom-block-title">Attention</p><p>Do <strong>NOT</strong> copy and paste the value wrapped by <code>$</code>, please type the value instead.</p></div><h4 id="configure-response" tabindex="-1">Configure response <a class="header-anchor" href="#configure-response" aria-label="Permalink to &quot;Configure response&quot;">​</a></h4><p>Once the user has provided all necessary information for a reservation, the chatbot should inform the user whether the reservation has been made successfully. To do this, you will define two branches and configure their respective responses.</p><h5 id="define-branch-informfailure" tabindex="-1">Define branch: InformFailure <a class="header-anchor" href="#define-branch-informfailure" aria-label="Permalink to &quot;Define branch: InformFailure&quot;">​</a></h5><ol><li>Turn on <strong>Branches</strong> and add a branch labeled <code>InformFailure</code>.</li><li>Inside the <code>InformFailure</code> branch, add a <strong>Single Value Message</strong> action. Configure this action as follows: <ul><li>The condition of the branch:<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">makeReservation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span></code></pre></div></li><li>Single Value Message:<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Sorry, the table you want to book </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currently unavailable. You may change to another time or date, and </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> it again.</span></span></code></pre></div></li></ul></li></ol><h5 id="default-branch" tabindex="-1">Default branch <a class="header-anchor" href="#default-branch" aria-label="Permalink to &quot;Default branch&quot;">​</a></h5><p>In the <strong>Default branch</strong> section, add a <strong>Single Value Message</strong> action, and add this template:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Your reservation has been made</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> We</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ll see you at `${timePicker!!.time!!.expression()}` on `${datePicker!!.date!!.expression()}`. You can check your reservation under your ID: `${userIdentifier?.userId}`.</span></span></code></pre></div><p>:🎉: Congratulations! You&#39;ve built up a reservation module.</p>',66),h=[n];function r(o,p,k,d,c,E){return e(),s("div",null,h)}const y=i(l,[["render",r]]);export{u as __pageData,y as default};
